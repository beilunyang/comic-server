{"version":3,"sources":["../../src/routes/comic.js"],"names":["router","get","ctx","console","log","page","Number","params","isNaN","body","find","skip","limit","select","exec","comics","total","Promise","all","types","$in","cate","count","regx","RegExp","keyword","$or","title","authors","mid","pid","comic","findOne","p","c","toObject","cates","chapter_cates","push","sort","order","chapters"],"mappings":"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","file":"comic.js","sourcesContent":["import Router from 'koa-router';\nimport { Comic, Chapter, Theme, Cate, Recommend } from '../models';\n\nconst router = new Router();\n\nrouter.get('/page/:page', async (ctx) => {\n  console.log('get ComicList');\n  let page = Number(ctx.params.page);\n  if (isNaN(page) || !page) {\n    page = 1;\n  }\n  ctx.body = await Comic.find().skip((page - 1) * 15).limit(15).select('-__v')\n    .exec();\n});\n\nrouter.get('/cate', async (ctx) => {\n  console.log('get cate');\n  ctx.body = await Cate.find().select('-__v').exec();\n});\n\n\nrouter.get('/cate/:cate/page/:page', async (ctx) => {\n  console.log('get cate comic');\n  let page = Number(ctx.params.page);\n  if (isNaN(page) || page < 1) {\n    page = 1;\n  }\n  if (page === 1) {\n    const [comics, total] = await Promise.all([\n      Comic.find({\n        types: { $in: [ctx.params.cate] },\n      }).skip((page - 1) * 15).limit(15).select('-__v -_id').exec(),\n      Comic.find({\n        types: { $in: [ctx.params.cate] },\n      }).count(),\n    ]);\n    ctx.body = {\n      total,\n      comics,\n    };\n    return;\n  }\n  ctx.body = await Comic.find({\n    types: { $in: [ctx.params.cate] },\n  }).skip((page - 1) * 15).limit(15).select('-__v -_id').exec();\n});\n\nrouter.get('/search/:keyword/page/:page', async (ctx) => {\n  console.log('search');\n  const regx = new RegExp(ctx.params.keyword, 'i');\n  let page = Number(ctx.params.page);\n  if (isNaN(page) || page < 1) {\n    page = 1;\n  }\n  if (page === 1) {\n    const [comics, total] = await Promise.all([\n      Comic.find({\n        $or: [\n          {\n            title: regx,\n          },\n          {\n            authors: { $in: [regx] },\n          },\n        ]\n      }).skip((page - 1) * 15).limit(15).select('-__v -_id').exec(),\n      Comic.find({\n        $or: [\n          {\n            title: regx,\n          },\n          {\n            authors: { $in: [regx] },\n          },\n        ]\n      }).count(),\n    ]);\n    ctx.body = {\n      total,\n      comics,\n    };\n    return;\n  }\n  ctx.body = await Comic.find({\n    $or: [\n      {\n        title: regx,\n      },\n      {\n        authors: { $in: [regx] },\n      },\n    ]\n  }).skip((page - 1) * 15).limit(15).select('-__v -_id').exec();\n});\n\nrouter.get('/theme', async (ctx) => {\n  console.log('get themes');\n  ctx.body = await Theme.find();\n});\n\nrouter.get('/recommend', async (ctx) => {\n  console.log('get recommend');\n  ctx.body = await Recommend.find();\n});\n\nrouter.get('/:mid/chapter/:pid', async (ctx) => {\n  console.log('get comic chapter');\n  const mid = Number(ctx.params.mid);\n  const pid = Number(ctx.params.pid);\n  ctx.body = await Chapter.find({ mid, pid }).select('-__v -_id').exec();\n});\n\nrouter.get('/:mid', async (ctx) => {\n  console.log('get comic');\n  const mid = Number(ctx.params.mid);\n  // TODO: 性能优化\n  const comic = await Comic.findOne({ mid }).select('-__v -_id').exec();\n  const p = [];\n  const c = comic.toObject();\n  const cates = c.chapter_cates;\n  for (const cate of cates) {\n    p.push(Chapter.find({ mid, cate }).select('-__v -_id').sort({ order: -1 }).exec());\n  }\n  const chapters = await Promise.all(p);\n  c.chapters = chapters;\n  ctx.body = c;\n});\n\nexport default router;\n"]}