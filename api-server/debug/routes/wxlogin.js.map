{"version":3,"sources":["../../src/routes/wxlogin.js"],"names":["sclient","db","on","err","console","error","message","router","post","ctx","code","rawData","request","body","appid","secret","wx","result","get","openid","expires_in","data","md5","createHash","srand","Date","now","Math","random","toString","update","skey","digest","set","nickName","avatarUrl","JSON","parse","findOneAndUpdate","upsert","session_id","throw"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,MAAMA,UAAU,sBAAU,EAAEC,IAAI,CAAN,EAAV,CAAhB;AACAD,QAAQE,EAAR,CAAW,OAAX,EAAoBC,OAAOC,QAAQC,KAAR,CAAcF,IAAIG,OAAlB,CAA3B;;AAEA,MAAMC,SAAS,yBAAf;;AAEAA,OAAOC,IAAP,CAAY,GAAZ,EAAiB,MAAOC,GAAP,IAAe;AAC9B,QAAM,EAAEC,IAAF,EAAQC,OAAR,KAAoBF,IAAIG,OAAJ,CAAYC,IAAtC;AACA,MAAIH,IAAJ,EAAU;AACR,UAAM,EAAEI,KAAF,EAASC,MAAT,KAAoB,iBAAOC,EAAjC;AACA,UAAMC,SAAS,MAAM,gBAClBC,GADkB,CACb,sDAAqDJ,KAAM,WAAUC,MAAO,YAAWL,IAAK,gCAD/E,CAArB;AAEA,UAAM,EAAES,MAAF,EAAUC,UAAV,KAAyBH,OAAOI,IAAtC;AACA,UAAMC,MAAM,iBAAOC,UAAP,CAAkB,KAAlB,CAAZ;AACA,UAAMC,QAAQ,CAACC,KAAKC,GAAL,KAAaC,KAAKC,MAAL,KAAgB,OAA9B,EAAuCC,QAAvC,EAAd;AACAP,QAAIQ,MAAJ,CAAWN,KAAX;AACA,UAAMO,OAAOT,IAAIU,MAAJ,CAAW,KAAX,CAAb;AACAhC,YAAQiC,GAAR,CAAYF,IAAZ,EAAkBZ,MAAlB,EAA0B,IAA1B,EAAgCC,aAAa,KAAK,EAAlD;AACA,UAAM,EAAEc,QAAF,EAAYC,SAAZ,KAA0BC,KAAKC,KAAL,CAAW1B,OAAX,CAAhC;AACA,UAAM,aAAK2B,gBAAL,CAAsBnB,MAAtB,EAA8B,EAAEe,QAAF,EAAYC,SAAZ,EAAuBhB,MAAvB,EAA9B,EAA+D,EAAEoB,QAAQ,IAAV,EAA/D,CAAN;AACA9B,QAAII,IAAJ,GAAW,EAAE2B,YAAYT,IAAd,EAAX;AACD,GAbD,MAaO;AACLtB,QAAIgC,KAAJ,CAAU,GAAV,EAAe,qBAAf;AACD;AACF,CAlBD;;kBAoBelC,M","file":"wxlogin.js","sourcesContent":["import Router from 'koa-router';\nimport axios from 'axios';\nimport Redis from 'ioredis';\nimport crypto from 'crypto';\nimport config from '../config';\nimport { User } from '../models';\n\nconst sclient = new Redis({ db: 1 });\nsclient.on('error', err => console.error(err.message));\n\nconst router = new Router();\n\nrouter.post('/', async (ctx) => {\n  const { code, rawData } = ctx.request.body;\n  if (code) {\n    const { appid, secret } = config.wx;\n    const result = await axios\n      .get(`https://api.weixin.qq.com/sns/jscode2session?appid=${appid}&secret=${secret}&js_code=${code}&grant_type=authorization_code`);\n    const { openid, expires_in } = result.data;\n    const md5 = crypto.createHash('md5');\n    const srand = (Date.now() + Math.random() * 1000000).toString();\n    md5.update(srand);\n    const skey = md5.digest('hex');\n    sclient.set(skey, openid, 'EX', expires_in - 60 * 10);\n    const { nickName, avatarUrl } = JSON.parse(rawData);\n    await User.findOneAndUpdate(openid, { nickName, avatarUrl, openid }, { upsert: true });\n    ctx.body = { session_id: skey };\n  } else {\n    ctx.throw(400, 'code query required');\n  }\n});\n\nexport default router;\n"]}