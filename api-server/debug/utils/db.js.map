{"version":3,"sources":["../../src/utils/db.js"],"names":["host","database","user","password","process","env","NODE_ENV","mongodb","status","Promise","global","init","mongoUrl","connect","db","connection","resolve","reject","on","err","error","once","info"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,MAAM,EAAEA,IAAF,EAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,QAAxB,KAAqC,iBAAOC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,SAA/B,EAA0CC,OAArF;AACA,IAAIC,SAAS,aAAb;AACA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACA,MAAME,OAAO,MAAM;AACjB,MAAIH,WAAW,aAAf,EAA8B;AAC5B,QAAII,WAAY,aAAYZ,IAAK,IAAGC,QAAS,EAA7C;AACA,QAAIC,QAAQC,QAAZ,EAAsB;AACpBS,iBAAY,aAAYV,IAAK,IAAGC,QAAS,IAAGH,IAAK,UAASC,QAAS,mBAAnE;AACD;AACD,uBAASY,OAAT,CAAiBD,QAAjB;AACAJ,aAAS,YAAT;AACA,UAAMM,KAAK,mBAASC,UAApB;AACA,WAAO,IAAIN,OAAJ,CAAY,CAACO,OAAD,EAAUC,MAAV,KAAqB;AACtCH,SAAGI,EAAH,CAAM,OAAN,EAAeC,OAAO;AACpBX,iBAAS,aAAT;AACA,sBAAIY,KAAJ,CAAUD,GAAV;AACAF,eAAOE,GAAP;AACD,OAJD;AAKAL,SAAGO,IAAH,CAAQ,MAAR,EAAgB,MAAM;AACpBb,iBAAS,WAAT;AACA,sBAAIc,IAAJ,CAAS,oBAAT;AACAN;AACD,OAJD;AAKD,KAXM,CAAP;AAYD;AACF,CAtBD;;kBAwBe,EAAEL,IAAF,E","file":"db.js","sourcesContent":["import mongoose from 'mongoose';\nimport log from 'log';\nimport config from '../config';\n\nconst { host, database, user, password } = config[process.env.NODE_ENV || 'develop'].mongodb;\nlet status = 'DISCONNETED';\nmongoose.Promise = global.Promise;\nconst init = () => {\n  if (status === 'DISCONNETED') {\n    let mongoUrl = `mongodb://${host}/${database}`;\n    if (user && password) {\n      mongoUrl = `mongodb://${user}:${password}@${host}:27017/${database}?authSource=admin`;\n    }\n    mongoose.connect(mongoUrl);\n    status = 'CONNECTING';\n    const db = mongoose.connection;\n    return new Promise((resolve, reject) => {\n      db.on('error', err => {\n        status = 'DISCONNETED';\n        log.error(err);\n        reject(err);\n      });\n      db.once('open', () => {\n        status = 'CONNECTED';\n        log.info('Database connected');\n        resolve();\n      });\n    });\n  }\n};\n\nexport default { init };\n"]}